/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;


import com.mycompany.juego_de_batalla_pokemon.*;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 * @author Alonso
 */
public class IntefazFinal extends javax.swing.JFrame {
    private Batalla motorBatalla;
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(IntefazFinal.class.getName());

    /**
     * Creates new form IntefazFinal
     */
    public IntefazFinal(Batalla motorBatalla) {
        this.motorBatalla = motorBatalla;
        initComponents();
        actualizarInterfaz();
    }
    public IntefazFinal() {
        this(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNombreJugador = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        labelNombreContrincante = new javax.swing.JLabel();
        labelPokemonJugador = new javax.swing.JLabel();
        VidaContrincanteBarra = new javax.swing.JProgressBar();
        labelPokemonContrincante = new javax.swing.JLabel();
        VidaJugadorBarra = new javax.swing.JProgressBar();
        BOTONINTERCAMBIAR = new javax.swing.JButton();
        ATACAR = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelNombreJugador.setFont(new java.awt.Font("Minecraft", 2, 24)); // NOI18N
        labelNombreJugador.setText("jLabel2");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setEnabled(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(null);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        labelNombreContrincante.setFont(new java.awt.Font("Minecraft", 2, 24)); // NOI18N
        labelNombreContrincante.setText("jLabel2");

        BOTONINTERCAMBIAR.setText("INTERCAMBIAR");
        BOTONINTERCAMBIAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTONINTERCAMBIARActionPerformed(evt);
            }
        });

        ATACAR.setActionCommand("Atacar");
        ATACAR.setLabel("ATACAR");
        ATACAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ATACARActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/imagenes/fondo2.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VidaJugadorBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(VidaContrincanteBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(400, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(60, 60, 60)
                            .addComponent(labelNombreContrincante))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(630, 630, 630)
                            .addComponent(labelPokemonContrincante, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(620, 620, 620)
                            .addComponent(labelNombreJugador))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(ATACAR, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(240, 240, 240)
                            .addComponent(BOTONINTERCAMBIAR, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(labelPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(VidaContrincanteBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 364, Short.MAX_VALUE)
                .addComponent(VidaJugadorBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(70, 70, 70)
                            .addComponent(labelNombreContrincante)
                            .addGap(10, 10, 10)
                            .addComponent(labelPokemonContrincante, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(150, 150, 150)
                            .addComponent(labelNombreJugador)
                            .addGap(130, 130, 130)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ATACAR)
                                .addComponent(BOTONINTERCAMBIAR)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(260, 260, 260)
                            .addComponent(labelPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BOTONINTERCAMBIARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTONINTERCAMBIARActionPerformed
        // TODO add your handling code here:
        if (motorBatalla == null) return;

        Jugador jugador = motorBatalla.getTurnoActual();
        java.util.List<Pokemon> equipo = jugador.getEquipo();

        String[] nombres = equipo.stream()
                .filter(p -> p.getHp() > 0)
                .map(Pokemon::getNombre)
                .toArray(String[]::new);

        String eleccion = (String) JOptionPane.showInputDialog(
                this,
                "Elige PokÃ©mon para intercambiar:",
                jugador.getNombre(),
                JOptionPane.PLAIN_MESSAGE,
                null,
                nombres,
                nombres[0]
        );

        if (eleccion != null) {
            Pokemon nuevo = equipo.stream()
                    .filter(p -> p.getNombre().equals(eleccion))
                    .findFirst()
                    .orElse(null);

            if (nuevo != null) {
                String resultado = motorBatalla.ejecutarIntercambio(nuevo, jTextArea1);
                jTextArea1.append(resultado + "\n");
                actualizarInterfaz();
            }
        }
    }//GEN-LAST:event_BOTONINTERCAMBIARActionPerformed

    private void ATACARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ATACARActionPerformed
        // TODO add your handling code here:
        if (motorBatalla == null) return;

        Jugador jugador = motorBatalla.getTurnoActual();
        Pokemon atacante = jugador.getPokemonActivo();
        java.util.List<Ataque> ataques = atacante.getAtaques();

        String[] opciones = ataques.stream().map(Ataque::getNombre).toArray(String[]::new);
        String eleccion = (String) JOptionPane.showInputDialog(
                this,
                "Elige un ataque:",
                atacante.getNombre(),
                JOptionPane.PLAIN_MESSAGE,
                null,
                opciones,
                opciones[0]
        );

        if (eleccion != null) {
            Ataque ataqueSeleccionado = ataques.stream()
                .filter(a -> a.getNombre().equals(eleccion))
                .findFirst()
                .orElse(null);

            if (ataqueSeleccionado != null) {
                String resultado = motorBatalla.ejecutarAtaque(ataqueSeleccionado, jTextArea1);
                jTextArea1.append(resultado + "\n");
                actualizarInterfaz();
            }
        }
    }//GEN-LAST:event_ATACARActionPerformed

    /**
     * @param args the command line arguments
     */
    private void actualizarInterfaz() {
        if (motorBatalla == null) return;

        Jugador turno = motorBatalla.getTurnoActual();
        Jugador oponente = motorBatalla.getJugadorOponente();

        Pokemon pj = turno.getPokemonActivo();
        Pokemon pc = oponente.getPokemonActivo();

        labelNombreJugador.setText(pj.getNombre());
        labelNombreContrincante.setText(pc.getNombre());

        cargarPokemon(labelPokemonJugador, pj.getNombre());
        cargarPokemon(labelPokemonContrincante, pc.getNombre());

        VidaJugadorBarra.setMaximum(pj.getMaxHp()); // ajustar si hay maxHp
        VidaJugadorBarra.setValue(pj.getHp());
        VidaContrincanteBarra.setMaximum(pc.getMaxHp());
        VidaContrincanteBarra.setValue(pc.getHp());
    }

    private void cargarPokemon(JLabel label, String nombrePokemon) {
        String ruta = "/interfaz/pokemones/" + nombrePokemon.toLowerCase() + ".gif";
        java.net.URL url = getClass().getResource(ruta);

        if (url != null) {
            ImageIcon icon = new ImageIcon(url);
            Image img = icon.getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_DEFAULT);
            label.setIcon(new ImageIcon(img));
        } else {
            label.setIcon(null);
            System.err.println("No se encontrÃ³ la imagen para " + nombrePokemon);
        }
    }
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> new IntefazFinal().setVisible(true));
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ATACAR;
    private javax.swing.JButton BOTONINTERCAMBIAR;
    private javax.swing.JProgressBar VidaContrincanteBarra;
    private javax.swing.JProgressBar VidaJugadorBarra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelNombreContrincante;
    private javax.swing.JLabel labelNombreJugador;
    private javax.swing.JLabel labelPokemonContrincante;
    private javax.swing.JLabel labelPokemonJugador;
    // End of variables declaration//GEN-END:variables
}
